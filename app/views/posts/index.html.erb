<div class="search-container">
  <%= form_with url: index_post_path, class: "form", method: :get, local: true do |form| %>
    <input class="input" type="text" name="title" placeholder="タイトルで検索" value="<%= params[:title] %>">
    <%= form.submit "検索", class: "button" %>
  <% end %>
</div>

<% if @category %>
  <div class="category-container">
    <div class="category">
      <h3><%= @category.category%></h3>
    </div>
  </div>
<% end %>

<div class="post-list">
  <% @posts.each_with_index do |post, i| %>
    <%= render partial: "post", locals: { post: post, profile: @profiles[i], comment_count: @comment_count[i] } %>
  <% end %>
</div>

<div class="load-more-container">
  <% if @posts.next_page %>
    <button id="load-more-button" data-next-page="<%= @posts.next_page %>">
      もっと読み込む
    </button>
  <% end %>
</div>

<!-- 100投稿ずつ表示する -->
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const loadMoreButton = document.getElementById("load-more-button");

    if (loadMoreButton) {
      loadMoreButton.addEventListener("click", async () => {
        const nextPage = loadMoreButton.dataset.nextPage;
        
        // 現在の検索条件を取得
        const params = new URLSearchParams(window.location.search);
        params.set("page", nextPage); // 次のページを設定

        const url = `${window.location.pathname}?${params.toString()}`;

        try {
          const response = await fetch(url, {
            headers: { 
              "X-Requested-With": "XMLHttpRequest", // Ajaxリクエストを明示
              "Accept": "text/javascript", // JavaScriptレスポンスを期待
            },
          });

          if (!response.ok) throw new Error("ネットワークエラー");

          const script = await response.text();
          eval(script); // サーバーから送られたJavaScriptを実行

        } catch (error) {
          console.error("エラーが発生しました:", error);
        }
      });
    }
  });
</script>


# HTTP 80: Let's Encrypt の認証ディレクトリ以外は HTTPS へリダイレクト
server {
    listen 80;
    server_name oshitetsu.com;

    # Let's Encrypt の認証用ディレクトリ
    location /.well-known/acme-challenge/ {
        root /var/www/html;
        allow all;
    }

    # HTTP を HTTPS へリダイレクト
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS 443: SSL 証明書の適用と Rails アプリのプロキシ設定
server {
    listen 443 ssl;
    server_name oshitetsu.com;

    ssl_certificate /etc/letsencrypt/live/oshitetsu.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/oshitetsu.com/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    client_max_body_size 100M; # サーバーの容量を増やす（デフォルトは1MB）

    # Let's Encrypt の認証用ディレクトリ
    location /.well-known/acme-challenge/ {
        root /var/www/html;
        allow all;
    }

    # 静的ファイル (CSS, JS, 画像など) を直接提供
    location ~ ^/(assets|packs|images|fonts|css|js|videos)/ {
        alias /src/public;  # docker-compose.yml 74行目に合わせて修正
        expires max;
        add_header Cache-Control "public, max-age=31536000";
        access_log off;
    }

    # Rails のリクエストは rails-railway に転送
    location / {
        proxy_pass http://rails-railway:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
    }
}


